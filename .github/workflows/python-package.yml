# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Update the Stream

on:
  push:
    branches: [ development ]
  pull_request:
    branches: [ main, development ]

jobs:
  build:

    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            asset_name: udts-macos-x86_64-${{ github.sha }}
          - os: windows-latest
            asset_name: udts-win64-${{ github.sha }}


    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: "3.8"
    - name: Setup Pipenv
      run: |
        python -m pip install --upgrade pip pipenv wheel
        pipenv install --deploy --dev

    - name: Test with pytest
      run: pipenv run pytest tests.py

    - name: Build package
      run: |
        pipenv install -d pyinstaller
        pipenv run pip uninstall typing -y
        pipenv run pyinstaller --onefile --icon=static/chhtv.ico udts.py

    - name: Package Streamdeck plugin
      run: |
        mkdir dist/plugins
        if [ "$RUNNER_OS" == "Windows" ]; then
          $GITHUB_WORKSPACE/DistributionTool.exe -b -i streamdeck/com.udts.sdPlugin -o dist/plugins
        else
          $GITHUB_WORKSPACE/DistributionTool -b -i streamdeck/com.udts.sdPlugin -o dist/plugins
        fi
      shell: bash

    - name: Copy data files
      run: |
        cp -R static dist/
        cp *.md dist/
      shell: bash

    - uses: vimtor/action-zip@v1
      with:
        files: dist/
        recursive: false
        dest: udts.zip

    - uses: svenstaro/upload-release-action@v2
      name: Publish release
      with:
        file: udts.zip
        asset_name: ${{ matrix.asset_name }}.zip
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ github.ref }}    

